// <auto-generated />
using FamilyRelationshipDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamilyRelationshipDataAccess.Migrations
{
    [DbContext(typeof(FamilyDbContext))]
    [Migration("20240815152152_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FamilyRelationshipDomain.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("FamilyRelationshipDomain.FamilyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("FamilyMemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("FamilyMembers");
                });

            modelBuilder.Entity("FamilyRelationshipDomain.FamilyRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<int>("FamilyMemberFromId")
                        .HasColumnType("int");

                    b.Property<int>("FamilyMemberToId")
                        .HasColumnType("int");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("FamilyMemberFromId");

                    b.HasIndex("FamilyMemberToId");

                    b.ToTable("FamilyRelationships");
                });

            modelBuilder.Entity("FamilyRelationshipDomain.FamilyMember", b =>
                {
                    b.HasOne("FamilyRelationshipDomain.Family", "Family")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("FamilyRelationshipDomain.FamilyRelationship", b =>
                {
                    b.HasOne("FamilyRelationshipDomain.Family", "Family")
                        .WithMany("FamilyRelationships")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyRelationshipDomain.FamilyMember", "FamilyMemberFrom")
                        .WithMany("RelationshipsFrom")
                        .HasForeignKey("FamilyMemberFromId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FamilyRelationshipDomain.FamilyMember", "FamilyMemberTo")
                        .WithMany("RelationshipsTo")
                        .HasForeignKey("FamilyMemberToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Family");

                    b.Navigation("FamilyMemberFrom");

                    b.Navigation("FamilyMemberTo");
                });

            modelBuilder.Entity("FamilyRelationshipDomain.Family", b =>
                {
                    b.Navigation("FamilyMembers");

                    b.Navigation("FamilyRelationships");
                });

            modelBuilder.Entity("FamilyRelationshipDomain.FamilyMember", b =>
                {
                    b.Navigation("RelationshipsFrom");

                    b.Navigation("RelationshipsTo");
                });
#pragma warning restore 612, 618
        }
    }
}
